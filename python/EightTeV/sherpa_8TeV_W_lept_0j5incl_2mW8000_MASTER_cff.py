import FWCore.ParameterSet.Config as cms

generator = cms.EDFilter("SherpaGeneratorFilter",
  maxEventsToPrint = cms.int32(0),
  filterEfficiency = cms.untracked.double(1.0),
  crossSection = cms.untracked.double(-1),
  SherpaProcess = cms.string('8TeV_W_lept_0j5incl_2mW8000'),
  SherpackLocation = cms.string('slc5_amd64_gcc462/sherpa/1.4.0/'),
  SherpackChecksum = cms.string('b043c0a7782b05e583236bdbc1c10cb1'),
  FetchSherpack = cms.bool(True),
  SherpaPath = cms.string('./'),
  SherpaPathPiece = cms.string('./'),
  SherpaResultDir = cms.string('Result'),
  SherpaDefaultWeight = cms.double(1.0),
  SherpaParameters = cms.PSet(parameterSets = cms.vstring(
                             "Run"),
                              Run = cms.vstring(
        "(run){",
        " EVENTS = 1000;",
        " EVENT_MODE = HepMC;",
        " # avoid comix re-init after runcard modification",
        " WRITE_MAPPING_FILE 3;",
        "}(run)",
        "(beam){",
        " BEAM_1 = 2212; BEAM_ENERGY_1 = 4000.;",
        " BEAM_2 = 2212; BEAM_ENERGY_2 = 4000.;",
        "}(beam)",
        "(processes){",
        " Process 93 93 -> 90 91 93{5};",
        " Order_EW 2;",
        " Enhance_Factor 2 {3};",
        " Enhance_Factor 10 {4};",
        " Enhance_Factor 20 {5};",
        " Enhance_Factor 20 {6};",
        " Enhance_Factor 20 {7};",
        " CKKW sqr(20./E_CMS);",
        " Integration_Error 0.02 {5,6,7};",
        " End process;",
        "}(processes)",
        "(selector){",
        " Mass  90 91 2. E_CMS;",
        "}(selector)",
        "(integration){",
        " FINISH_OPTIMIZATION = Off",
        "}(integration)",
        "(isr){",
        " PDF_LIBRARY     = LHAPDFSherpa",
        " PDF_SET         = CT10.LHgrid",
        " PDF_SET_VERSION = 0",
        " PDF_GRID_PATH   = PDFsets",
        "}(isr)",
        "(me){",
        " ME_SIGNAL_GENERATOR = Internal Comix",
        " EVENT_GENERATION_MODE = Unweighted;",
        "}(me)",
        "(mi){",
        " MI_HANDLER = Amisic  # None or Amisic",
        "}(mi)"
                                                  ),
                             )
)
