import FWCore.ParameterSet.Config as cms
import os

source = cms.Source("EmptySource")

generator = cms.EDFilter("SherpaGeneratorFilter",
  maxEventsToPrint = cms.int32(0),
  filterEfficiency = cms.untracked.double(0.03),
  crossSection = cms.untracked.double(15002.8),
  SherpaProcess = cms.string('8TeV_gamjet_0j3incl_loop_60mgj8000'),
  SherpackLocation = cms.string('slc5_amd64_gcc462/sherpa/1.4.2/8TeV/'),
  SherpackChecksum = cms.string('ee876e6493838bddd01b3d498bbf923f'),
  FetchSherpack = cms.bool(True),
  SherpaPath = cms.string('./'),
  SherpaPathPiece = cms.string('./'),
  SherpaResultDir = cms.string('Result'),
  SherpaDefaultWeight = cms.double(1.0),
  SherpaParameters = cms.PSet(parameterSets = cms.vstring(
                             "Run"),
                              Run = cms.vstring(
				"(run){",
				" EVENTS = 100;",
				" EVENT_MODE = HepMC;",
				" # avoid comix re-init after runcard modification",
				" WRITE_MAPPING_FILE 3;",
				"}(run)",
				"(beam){",
				" BEAM_1 = 2212; BEAM_ENERGY_1 = 4000.;",
				" BEAM_2 = 2212; BEAM_ENERGY_2 = 4000.;",
				"}(beam)",
				"(processes){",
				" Process 93 93 -> 22 93 93{3};",
				" Order_EW 1;",
				" Enhance_Factor 2 {3};",
				" Enhance_Factor 3 {4};",
				" Enhance_Factor 5 {5};",
				" CKKW sqr(20./E_CMS);",
				" Integration_Error 0.005 {3};",
				" Integration_Error 0.01 {4};",
				" Integration_Error 0.03 {5};",
				" End process;",
				"}(processes)",
				"(selector){",
				" Mass  22 93 80. E_CMS [PT_UP, PT_UP];",
				" PT 22 20. E_CMS [PT_UP];",
				" PT 93 20. E_CMS [PT_UP];",
				" DeltaR 22 93 0.3 1e12;",
				"}(selector)",
				"(shower){",
				" CSS_EW_MODE = 1",
				"}(shower)",
				"(integration){",
				" FINISH_OPTIMIZATION = Off",
				"}(integration)",
				"(isr){",
				" PDF_LIBRARY     = LHAPDFSherpa",
				" PDF_SET         = CT10.LHgrid",
				" PDF_SET_VERSION = 0",
				" PDF_GRID_PATH   = PDFsets",
				"}(isr)",
				"(me){",
				" ME_SIGNAL_GENERATOR = Internal Comix",
				" EVENT_GENERATION_MODE = Unweighted;",
				"}(me)",
				"(mi){",
				" MI_HANDLER = Amisic  # None or Amisic",
				"}(mi)"
                                                  ),
                             )
)

gj_filter = cms.EDFilter("PythiaFilterGammaGamma",
    PtSeedThr = cms.untracked.double(5.0),
    EtaSeedThr = cms.untracked.double(2.8),
    PtGammaThr = cms.untracked.double(0.0),
    EtaGammaThr = cms.untracked.double(2.8),
    PtElThr = cms.untracked.double(2.0),
    EtaElThr = cms.untracked.double(2.8),
    dRSeedMax = cms.untracked.double(0.0),
    dPhiSeedMax = cms.untracked.double(0.2),
    dEtaSeedMax = cms.untracked.double(0.12),
    dRNarrowCone = cms.untracked.double(0.02),
    PtTkThr = cms.untracked.double(1.6),
    EtaTkThr = cms.untracked.double(2.2),
    dRTkMax = cms.untracked.double(0.2),
    PtMinCandidate1 = cms.untracked.double(15.),
    PtMinCandidate2 = cms.untracked.double(15.),
    EtaMaxCandidate = cms.untracked.double(3.0),
    NTkConeMax = cms.untracked.int32(2),
    NTkConeSum = cms.untracked.int32(4),
    InvMassWide = cms.untracked.double(80.0),
    InvMassNarrow = cms.untracked.double(14000.0),
    AcceptPrompts = cms.untracked.bool(True),
    PromptPtThreshold = cms.untracked.double(15.0)

)

ProductionFilterSequence = cms.Sequence(generator*gj_filter)

