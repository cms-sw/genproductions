# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
    paths:
      - '.github/workflows/**'
      - 'bin/Powheg/**'
      - '!**/*.input'
      - 'bin/utils/**' 
  pull_request:
    branches: [ master ]
    paths:
      - '.github/workflows/**'
      - 'bin/Powheg/**'
      - '!**/*.input'
      - 'bin/utils/**' 

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  powheg:
    strategy:
      matrix:
        proc: [hvq]
        cmssw_release: [CMSSW_10_6_30, CMSSW_11_0_1, CMSSW_12_3_1, CMSSW_13_0_13, CMSSW_13_3_0]
        include:
          - cmssw_release: CMSSW_10_6_30
            scram_arch: slc7_amd64_gcc700
            os: cc7
          - cmssw_release: CMSSW_11_0_1
            scram_arch: slc7_amd64_gcc820
            os: cc7
          - cmssw_release: CMSSW_12_3_1
            scram_arch: slc7_amd64_gcc10
            os: cc7
          - cmssw_release: CMSSW_13_0_13
            scram_arch: el8_amd64_gcc11
            os: el8
          - cmssw_release: CMSSW_13_3_0
            scram_arch: el8_amd64_gcc12
            os: el8
      fail-fast: false
    # The type of runner that the job will run on
    runs-on: [self-hosted, linux, x64]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Cleanup build folder
        run: |
          ls -la ./
          rm -rf ./* || true
          rm -rf ./.??* || true
          ls -la ./
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter 
        with:
          filters: |
            powheg1:
             - 'bin/Powheg/**'
            workflow:
             - '.github/workflows/**' 
      - name: Build gridpack
        if: steps.filter.outputs.powheg1 == 'true' || steps.filter.outputs.workflow == 'true'
        uses: nick-fields/retry@v3
        with:
          max_attempts: 5
          timeout_minutes: 60
          retry_on_exit_code: 111 # failed CMSSW setup, likely due to cvmfs connectivity
          command: /cvmfs/cms.cern.ch/common/cmssw-${{ matrix.os }} -- bash bin/Powheg/test/test_build.sh -r ${{ matrix.cmssw_release }} -a ${{ matrix.scram_arch }} -p ${{ matrix.proc }}

      - name: Check pwg-stat.dat
        if: steps.filter.outputs.powheg1 == 'true' || steps.filter.outputs.workflow == 'true'
        run: git diff --exit-code bin/Powheg/test/pwg-stat.dat.${{ matrix.proc }}_${{ matrix.scram_arch }}_${{ matrix.cmssw_release }}

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          commit-message: Automated addition ${{ matrix.proc }}_${{ matrix.scram_arch }}_${{ matrix.cmssw_release }}
          branch: create-pull-request/${{ matrix.proc }}_${{ matrix.scram_arch }}_${{ matrix.cmssw_release }}
          delete-branch: true
          base: master
          title: Automated addition ${{ matrix.proc }}_${{ matrix.scram_arch }}_${{ matrix.cmssw_release }}
          body: |
            Automated addition by [create-pull-request](https://github.com/peter-evans/create-pull-request) GitHub action.
            Please review the cross section file carefully!            
  #############################################################
  req_check_script:
    # The type of runner that the job will run on
    runs-on: [self-hosted, linux, x64]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Cleanup build folder
        run: |
          ls -la ./
          rm -rf ./* || true
          rm -rf ./.??* || true
          ls -la ./
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it  
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            bin:
             - 'bin/utils/**' 
            workflow:
             - '.github/workflows/**'  
      - name: Run the request checking script on local mcm requests
        #shell: python#
        if: steps.filter.outputs.bin == 'true' || steps.filter.outputs.workflow == 'true'
        run: |
          python3 bin/utils/request_fragment_check.py --bypass_status --develop --local --prepid SUS-RunIISummer20UL16wmLHEGEN-00768
          python3 bin/utils/request_fragment_check.py --bypass_status --develop --local --prepid EXO-Run3Summer22wmLHEGS-01444
          python3 bin/utils/request_fragment_check.py --bypass_status --develop --local --prepid B2G-RunIISummer20UL18wmLHEGEN-03308
          python3 bin/utils/request_fragment_check.py --bypass_status --develop --local --prepid SMP-RunIISummer20UL16GEN-00050   
          python3 bin/utils/request_fragment_check.py --bypass_status --develop --local --prepid GEN-Run3Summer22EEwmLHEGS-00403
          python3 bin/utils/request_fragment_check.py --bypass_status --develop --local --prepid TRK-Run3Summer23wmLHEGS-00002
          python3 bin/utils/request_fragment_check.py --bypass_status --develop --local --prepid TSG-Run3Summer23BPixGS-00007
          python3 bin/utils/request_fragment_check.py --bypass_status --develop --local --prepid TSG-Run3Summer23BPixGS-00045     