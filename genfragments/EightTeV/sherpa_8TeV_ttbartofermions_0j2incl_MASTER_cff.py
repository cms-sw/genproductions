import FWCore.ParameterSet.Config as cms
import os

source = cms.Source("EmptySource")

generator = cms.EDFilter("SherpaGeneratorFilter",
  maxEventsToPrint = cms.int32(0),
  filterEfficiency = cms.untracked.double(1.0),
  crossSection = cms.untracked.double(-1),
  SherpaProcess = cms.string('8TeV_ttbartofermions_0j2incl'),
  SherpackLocation = cms.string('slc5_amd64_gcc462/sherpa/1.4.0/'),
  SherpackChecksum = cms.string('db3987e84bcfce9bd61e7936541955d9'),
  FetchSherpack = cms.bool(True),
  SherpaPath = cms.string('./'),
  SherpaPathPiece = cms.string('./'),
  SherpaResultDir = cms.string('Result'),
  SherpaDefaultWeight = cms.double(1.0),
  SherpaParameters = cms.PSet(parameterSets = cms.vstring(
                             "Run"),
                              Run = cms.vstring(
				"(run){",
				" EVENTS 100;",
				" EVENT_MODE = HepMC;",
				" # only e and mu in lepton container",
				" MASSIVE[15]=1;",
				" # set top and W width from their PDG values to their strict LO values",
				" WIDTH[6]=1.47211; WIDTH[24]=2.035169;",
				" # avoid comix re-init after runcard modification",
				" WRITE_MAPPING_FILE 3;",
				"}(run)",
				"(beam){",
				" BEAM_1 = 2212; BEAM_ENERGY_1 = 4000;",
				" BEAM_2 = 2212; BEAM_ENERGY_2 = 4000;",
				"}(beam)",
				"(processes){",
				" # ttbar + up to 4 jets lepton hadron channel",
				" Process 93 93 ->  6[a] -6[b] 93{2}",
				" Order_EW 4",
				" Decay 6[a] -> 24[c] 5",
				" Decay -6[b] -> -24[d] -5",
				" Decay 24[c] -> 92 92",
				" Decay -24[d] -> 92 92",
				" CKKW sqr(30/E_CMS)",
				" Scales LOOSE_METS{MU_F2}{MU_R2} {8}",
				" Integration_Error 0.1 {7,8}",
				" Max_N_Quarks 6 {8}; # the quarks in the decay don't count",
				" End process",
				"}(processes)",
				"(selector){",
				" # loose cut on W-mass",
				" DecayMass 24 40.0 120.0",
				" DecayMass -24 40.0 120.0",
				" # cut on top mass",
				" DecayMass 6 150.0 200.0",
				" DecayMass -6 150.0 200.0",
				"}(selector)",
				"(integration){",
				" FINISH_OPTIMIZATION = Off",
				"}(integration)",
				"(isr){",
				" PDF_LIBRARY     = LHAPDFSherpa",
				" PDF_SET         = CT10.LHgrid",
				" PDF_SET_VERSION = 0",
				" PDF_GRID_PATH   = PDFsets",
				"}(isr)",
				"(me){",
				" ME_SIGNAL_GENERATOR = Comix",
				" EVENT_GENERATION_MODE = Unweighted;",
				"}(me)",
				"(mi){",
				" MI_HANDLER = Amisic  # None or Amisic",
				"}(mi)"
                                                  ),
                             )
)

ProductionFilterSequence = cms.Sequence(generator)

