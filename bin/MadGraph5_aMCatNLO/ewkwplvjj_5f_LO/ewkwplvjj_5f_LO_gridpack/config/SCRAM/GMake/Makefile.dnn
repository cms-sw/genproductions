DNN_TARGET_TRIPLET:=$(shell $(CXX) -dumpmachine)
DNN_TARGET_FEATURE:=
ifeq ($(IS_AMD64),YES)
DNN_TARGET_FEATURE:=+sse4.2
endif
ifeq ($(IS_AARCH64),YES)
DNN_TARGET_FEATURE:=+neon
endif
define AddDNNRules
  $(foreach d,$($(1)_DNN_NAME),$(call  AddDNNRule,$1,$2,$d))
endef

define AddDNNRule
$(1)_precompile += $($(1)_$($(1)_DNN_NAME)_HEADER)
$(1)_objs   += $($(1)_objdir)/$(3)/tfcompile_metadata.o $($(1)_objdir)/$(3)/tfcompile_function.o
$($(1)_objdir)/$(3)/tfcompile_metadata.o $($(1)_objdir)/$(3)/tfcompile_function.o: $($(1)_$($(1)_DNN_NAME)_HEADER)
	@$(CMD_touch) $$@
$($(1)_$($(1)_DNN_NAME)_HEADER): $($(1)_DNN_PB) $($(1)_DNN_CONFIG_PBTXT) $($(1)_objdir)/config
	@$(CMD_echo) "01:$(CMD_rm) -rf $$(@D)" > $$(call AutoCleanFile,$($(1)_objdir)/$3,dnn)
	$(call generate_dnn,$1,$2,$3,$($(1)_objdir)/$(3))
endef

define DNNXDEPS
ifeq ($(strip $(filter %LIBRARY,$($1_CLASS))),)
$(1)_$($(1)_DNN_NAME)_HEADER:=$(WORKINGDIR)/include/$(1)/$(patsubst self/%,%,$($(1)_PACKAGE))/$($(1)_DNN_NAME)/header.h
$(1)_LOC_FLAGS_CPPFLAGS+=-I$(WORKINGDIR)/include/$(1)/$(SCRAM_SOURCEDIR) -I$(WORKINGDIR)/include/$(1)/$(patsubst self/%,%,$($(1)_PACKAGE))
else
$(1)_$($(1)_DNN_NAME)_HEADER:=$(SCRAMSTORENAME_INCLUDE)/$(SCRAM_ARCH)/$(patsubst self/%,%,$($(1)_PACKAGE))/$($(1)_DNN_NAME)/header.h
endif
$(1)_DNN_PB:=$(call FileSearchPath,$(patsubst self/$(SCRAM_SOURCEDIR)/%,%,$($(1)_PACKAGE))/$($(1)_DNN_NAME).pb,CMSSW_SEARCH_PATH)
$(1)_DNN_CONFIG_PBTXT:=$$(patsubst %.pb,%.config.pbtxt,$$($(1)_DNN_PB))
$(1)_XDEPS += $$($(1)_$($(1)_DNN_NAME)_HEADER)
endef

# Generate DNN 
define generate_dnn
  @$(startlog_$(1))[ -d $$(@D) ] ||  $(CMD_mkdir) -p $$(@D) &&\
  [ -d $(4) ] ||  $(CMD_mkdir) -p $(4) &&\
  $(CMD_echo) ">> Building TensorFlow graphs $$< " &&\
  $(VERB_ECHO) $(TFCOMPILE) --target_features="$(DNN_TARGET_FEATURE)" --graph=$$($(1)_DNN_PB) --config=$$($(1)_DNN_CONFIG_PBTXT) --entry_point=__tensorflow_$(3) \
               --cpp_class=$(3) --target_triple=$(DNN_TARGET_TRIPLET) --out_header=$$@ --out_metadata_object=$(4)/tfcompile_metadata.o --out_function_object=$(4)/tfcompile_function.o &&\
  ( $(TFCOMPILE) --target_features="$(DNN_TARGET_FEATURE)" --graph=$$($(1)_DNN_PB) --config=$$($(1)_DNN_CONFIG_PBTXT) --entry_point=__tensorflow_$(3) \
    --cpp_class=$(3) --target_triple=$(DNN_TARGET_TRIPLET) --out_header=$$@ --out_metadata_object=$(4)/tfcompile_metadata.o --out_function_object=$(4)/tfcompile_function.o || ($(CMD_rm) -f $$@ && exit 1)) $(endlog_$(1))
endef

