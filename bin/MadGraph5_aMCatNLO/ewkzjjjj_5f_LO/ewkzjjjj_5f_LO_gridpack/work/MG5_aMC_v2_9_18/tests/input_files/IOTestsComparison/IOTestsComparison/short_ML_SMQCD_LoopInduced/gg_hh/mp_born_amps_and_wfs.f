      SUBROUTINE MP_BORN_AMPS_AND_WFS(P)
C     
C     Generated by MadGraph5_aMC@NLO v. %(version)s, %(date)s
C     By the MadGraph5_aMC@NLO Development Team
C     Visit launchpad.net/madgraph5 and amcatnlo.web.cern.ch
C     
C     Computes all the AMP and WFS in quadruple precision for the 
C     phase space point P(0:3,NEXTERNAL)
C     
C     Process: g g > h h QED=2 QCD=2 [ virt = QCD ] WEIGHTED=12
C     
      IMPLICIT NONE
C     
C     CONSTANTS
C     

      INTEGER    NLOOPAMPS, NCTAMPS
      PARAMETER (NLOOPAMPS=20, NCTAMPS=4)
      INTEGER    NEXTERNAL
      PARAMETER (NEXTERNAL=4)
      INTEGER    NWAVEFUNCS
      PARAMETER (NWAVEFUNCS=5)
      INTEGER    NCOMB
      PARAMETER (NCOMB=4)
      REAL*16     ZERO
      PARAMETER (ZERO=0E0_16)
      COMPLEX*32 IMAG1
      PARAMETER (IMAG1=(0E0_16,1E0_16))

C     
C     ARGUMENTS 
C     
      REAL*16 P(0:3,NEXTERNAL)
C     
C     LOCAL VARIABLES 
C     
      INTEGER I,J,H
      INTEGER NHEL(NEXTERNAL), IC(NEXTERNAL)
      DATA IC/NEXTERNAL*1/

C     
C     GLOBAL VARIABLES
C     
      INCLUDE 'mp_coupl_same_name.inc'

      INTEGER NTRY
      LOGICAL CHECKPHASE,HELDOUBLECHECKED
      REAL*8 REF
      COMMON/INIT/NTRY,CHECKPHASE,HELDOUBLECHECKED,REF

      LOGICAL GOODHEL(NCOMB)
      LOGICAL GOODAMP(NLOOPAMPS,NCOMB)
      COMMON/FILTERS/GOODAMP,GOODHEL

      INTEGER HELPICKED
      COMMON/HELCHOICE/HELPICKED



      COMPLEX*32 W(20,NWAVEFUNCS)
      COMMON/MP_WFS/W

      COMPLEX*32 AMPL(3,NCTAMPS)
      COMMON/MP_AMPL/AMPL

      COMPLEX*16 DPW(20,NWAVEFUNCS)
      COMMON/WFCTS/DPW

      COMPLEX*16 DPAMPL(3,NLOOPAMPS)
      LOGICAL S(NLOOPAMPS)
      COMMON/AMPL/DPAMPL,S

      INTEGER HELC(NEXTERNAL,NCOMB)
      COMMON/HELCONFIGS/HELC

      LOGICAL MP_DONE_ONCE
      COMMON/MP_DONE_ONCE/MP_DONE_ONCE

C     ----------
C     BEGIN CODE
C     ---------

      MP_DONE_ONCE=.TRUE.

C     To be on the safe side, we always update the MP params here.
C     It can be redundant as this routine can be called a couple of
C      times for the same PS point during the stability checks.
C     But it is really not time consuming and I would rather be safe.
      CALL MP_UPDATE_AS_PARAM()

      DO H=1,NCOMB
        IF ((HELPICKED.EQ.H).OR.((HELPICKED.EQ.-1).AND.((CHECKPHASE.OR.
     $   .NOT.HELDOUBLECHECKED).OR.GOODHEL(H)))) THEN
          DO I=1,NEXTERNAL
            NHEL(I)=HELC(I,H)
          ENDDO
          CALL MP_VXXXXX(P(0,1),ZERO,NHEL(1),-1*IC(1),W(1,1))
          CALL MP_VXXXXX(P(0,2),ZERO,NHEL(2),-1*IC(2),W(1,2))
          CALL MP_SXXXXX(P(0,3),+1*IC(3),W(1,3))
          CALL MP_SXXXXX(P(0,4),+1*IC(4),W(1,4))
C         Counter-term amplitude(s) for loop diagram number 1
          CALL MP_R2_GGHH_0(W(1,1),W(1,2),W(1,4),W(1,3),R2_GGHHB
     $     ,AMPL(1,1))
          CALL MP_SSS1_1(W(1,3),W(1,4),GC_30,MDL_MH,MDL_WH,W(1,5))
C         Counter-term amplitude(s) for loop diagram number 3
          CALL MP_VVS1_0(W(1,1),W(1,2),W(1,5),R2_GGHB,AMPL(1,2))
C         Counter-term amplitude(s) for loop diagram number 9
          CALL MP_R2_GGHH_0(W(1,1),W(1,2),W(1,4),W(1,3),R2_GGHHT
     $     ,AMPL(1,3))
C         Counter-term amplitude(s) for loop diagram number 11
          CALL MP_VVS1_0(W(1,1),W(1,2),W(1,5),R2_GGHT,AMPL(1,4))
C         Copy the qp wfs to the dp ones as they are used to setup the
C          CT calls.
          DO I=1,NWAVEFUNCS
            DO J=1,20
              DPW(J,I)=W(J,I)
            ENDDO
          ENDDO
C         Same for the counterterms amplitudes
          DO I=1,NCTAMPS
            DO J=1,3
              DPAMPL(J,I)=AMPL(J,I)
              S(I)=.TRUE.
            ENDDO
          ENDDO

        ENDIF
      ENDDO

      END

