      SUBROUTINE SMATRIX_8(P,ANS)
C     
C     Generated by MadGraph5_aMC@NLO v. 2.6.5, 2018-02-03
C     By the MadGraph5_aMC@NLO Development Team
C     Visit launchpad.net/madgraph5 and amcatnlo.web.cern.ch
C     
C     Returns amplitude squared summed/avg over colors
C     and helicities
C     for the point in phase space P(0:3,NEXTERNAL)
C     
C     Process: g g > w+ a t~ b WEIGHTED<=6 [ all = QCD ]
C     
      IMPLICIT NONE
C     
C     CONSTANTS
C     
      INCLUDE 'nexternal.inc'
      INTEGER     NCOMB
      PARAMETER ( NCOMB=96)
C     
C     ARGUMENTS 
C     
      REAL*8 P(0:3,NEXTERNAL),ANS
      DOUBLE PRECISION       WGT_ME_BORN,WGT_ME_REAL
      COMMON /C_WGT_ME_TREE/ WGT_ME_BORN,WGT_ME_REAL
C     
C     LOCAL VARIABLES 
C     
      INTEGER IHEL,IDEN,I,T_IDENT(NCOMB)
      REAL*8 MATRIX_8
      REAL*8 T,T_SAVE(NCOMB)
      SAVE T_SAVE,T_IDENT
      INTEGER NHEL(NEXTERNAL,NCOMB)
      DATA (NHEL(I,   1),I=1,6) /-1,-1,-1,-1, 1,-1/
      DATA (NHEL(I,   2),I=1,6) /-1,-1,-1,-1, 1, 1/
      DATA (NHEL(I,   3),I=1,6) /-1,-1,-1,-1,-1,-1/
      DATA (NHEL(I,   4),I=1,6) /-1,-1,-1,-1,-1, 1/
      DATA (NHEL(I,   5),I=1,6) /-1,-1,-1, 1, 1,-1/
      DATA (NHEL(I,   6),I=1,6) /-1,-1,-1, 1, 1, 1/
      DATA (NHEL(I,   7),I=1,6) /-1,-1,-1, 1,-1,-1/
      DATA (NHEL(I,   8),I=1,6) /-1,-1,-1, 1,-1, 1/
      DATA (NHEL(I,   9),I=1,6) /-1,-1, 0,-1, 1,-1/
      DATA (NHEL(I,  10),I=1,6) /-1,-1, 0,-1, 1, 1/
      DATA (NHEL(I,  11),I=1,6) /-1,-1, 0,-1,-1,-1/
      DATA (NHEL(I,  12),I=1,6) /-1,-1, 0,-1,-1, 1/
      DATA (NHEL(I,  13),I=1,6) /-1,-1, 0, 1, 1,-1/
      DATA (NHEL(I,  14),I=1,6) /-1,-1, 0, 1, 1, 1/
      DATA (NHEL(I,  15),I=1,6) /-1,-1, 0, 1,-1,-1/
      DATA (NHEL(I,  16),I=1,6) /-1,-1, 0, 1,-1, 1/
      DATA (NHEL(I,  17),I=1,6) /-1,-1, 1,-1, 1,-1/
      DATA (NHEL(I,  18),I=1,6) /-1,-1, 1,-1, 1, 1/
      DATA (NHEL(I,  19),I=1,6) /-1,-1, 1,-1,-1,-1/
      DATA (NHEL(I,  20),I=1,6) /-1,-1, 1,-1,-1, 1/
      DATA (NHEL(I,  21),I=1,6) /-1,-1, 1, 1, 1,-1/
      DATA (NHEL(I,  22),I=1,6) /-1,-1, 1, 1, 1, 1/
      DATA (NHEL(I,  23),I=1,6) /-1,-1, 1, 1,-1,-1/
      DATA (NHEL(I,  24),I=1,6) /-1,-1, 1, 1,-1, 1/
      DATA (NHEL(I,  25),I=1,6) /-1, 1,-1,-1, 1,-1/
      DATA (NHEL(I,  26),I=1,6) /-1, 1,-1,-1, 1, 1/
      DATA (NHEL(I,  27),I=1,6) /-1, 1,-1,-1,-1,-1/
      DATA (NHEL(I,  28),I=1,6) /-1, 1,-1,-1,-1, 1/
      DATA (NHEL(I,  29),I=1,6) /-1, 1,-1, 1, 1,-1/
      DATA (NHEL(I,  30),I=1,6) /-1, 1,-1, 1, 1, 1/
      DATA (NHEL(I,  31),I=1,6) /-1, 1,-1, 1,-1,-1/
      DATA (NHEL(I,  32),I=1,6) /-1, 1,-1, 1,-1, 1/
      DATA (NHEL(I,  33),I=1,6) /-1, 1, 0,-1, 1,-1/
      DATA (NHEL(I,  34),I=1,6) /-1, 1, 0,-1, 1, 1/
      DATA (NHEL(I,  35),I=1,6) /-1, 1, 0,-1,-1,-1/
      DATA (NHEL(I,  36),I=1,6) /-1, 1, 0,-1,-1, 1/
      DATA (NHEL(I,  37),I=1,6) /-1, 1, 0, 1, 1,-1/
      DATA (NHEL(I,  38),I=1,6) /-1, 1, 0, 1, 1, 1/
      DATA (NHEL(I,  39),I=1,6) /-1, 1, 0, 1,-1,-1/
      DATA (NHEL(I,  40),I=1,6) /-1, 1, 0, 1,-1, 1/
      DATA (NHEL(I,  41),I=1,6) /-1, 1, 1,-1, 1,-1/
      DATA (NHEL(I,  42),I=1,6) /-1, 1, 1,-1, 1, 1/
      DATA (NHEL(I,  43),I=1,6) /-1, 1, 1,-1,-1,-1/
      DATA (NHEL(I,  44),I=1,6) /-1, 1, 1,-1,-1, 1/
      DATA (NHEL(I,  45),I=1,6) /-1, 1, 1, 1, 1,-1/
      DATA (NHEL(I,  46),I=1,6) /-1, 1, 1, 1, 1, 1/
      DATA (NHEL(I,  47),I=1,6) /-1, 1, 1, 1,-1,-1/
      DATA (NHEL(I,  48),I=1,6) /-1, 1, 1, 1,-1, 1/
      DATA (NHEL(I,  49),I=1,6) / 1,-1,-1,-1, 1,-1/
      DATA (NHEL(I,  50),I=1,6) / 1,-1,-1,-1, 1, 1/
      DATA (NHEL(I,  51),I=1,6) / 1,-1,-1,-1,-1,-1/
      DATA (NHEL(I,  52),I=1,6) / 1,-1,-1,-1,-1, 1/
      DATA (NHEL(I,  53),I=1,6) / 1,-1,-1, 1, 1,-1/
      DATA (NHEL(I,  54),I=1,6) / 1,-1,-1, 1, 1, 1/
      DATA (NHEL(I,  55),I=1,6) / 1,-1,-1, 1,-1,-1/
      DATA (NHEL(I,  56),I=1,6) / 1,-1,-1, 1,-1, 1/
      DATA (NHEL(I,  57),I=1,6) / 1,-1, 0,-1, 1,-1/
      DATA (NHEL(I,  58),I=1,6) / 1,-1, 0,-1, 1, 1/
      DATA (NHEL(I,  59),I=1,6) / 1,-1, 0,-1,-1,-1/
      DATA (NHEL(I,  60),I=1,6) / 1,-1, 0,-1,-1, 1/
      DATA (NHEL(I,  61),I=1,6) / 1,-1, 0, 1, 1,-1/
      DATA (NHEL(I,  62),I=1,6) / 1,-1, 0, 1, 1, 1/
      DATA (NHEL(I,  63),I=1,6) / 1,-1, 0, 1,-1,-1/
      DATA (NHEL(I,  64),I=1,6) / 1,-1, 0, 1,-1, 1/
      DATA (NHEL(I,  65),I=1,6) / 1,-1, 1,-1, 1,-1/
      DATA (NHEL(I,  66),I=1,6) / 1,-1, 1,-1, 1, 1/
      DATA (NHEL(I,  67),I=1,6) / 1,-1, 1,-1,-1,-1/
      DATA (NHEL(I,  68),I=1,6) / 1,-1, 1,-1,-1, 1/
      DATA (NHEL(I,  69),I=1,6) / 1,-1, 1, 1, 1,-1/
      DATA (NHEL(I,  70),I=1,6) / 1,-1, 1, 1, 1, 1/
      DATA (NHEL(I,  71),I=1,6) / 1,-1, 1, 1,-1,-1/
      DATA (NHEL(I,  72),I=1,6) / 1,-1, 1, 1,-1, 1/
      DATA (NHEL(I,  73),I=1,6) / 1, 1,-1,-1, 1,-1/
      DATA (NHEL(I,  74),I=1,6) / 1, 1,-1,-1, 1, 1/
      DATA (NHEL(I,  75),I=1,6) / 1, 1,-1,-1,-1,-1/
      DATA (NHEL(I,  76),I=1,6) / 1, 1,-1,-1,-1, 1/
      DATA (NHEL(I,  77),I=1,6) / 1, 1,-1, 1, 1,-1/
      DATA (NHEL(I,  78),I=1,6) / 1, 1,-1, 1, 1, 1/
      DATA (NHEL(I,  79),I=1,6) / 1, 1,-1, 1,-1,-1/
      DATA (NHEL(I,  80),I=1,6) / 1, 1,-1, 1,-1, 1/
      DATA (NHEL(I,  81),I=1,6) / 1, 1, 0,-1, 1,-1/
      DATA (NHEL(I,  82),I=1,6) / 1, 1, 0,-1, 1, 1/
      DATA (NHEL(I,  83),I=1,6) / 1, 1, 0,-1,-1,-1/
      DATA (NHEL(I,  84),I=1,6) / 1, 1, 0,-1,-1, 1/
      DATA (NHEL(I,  85),I=1,6) / 1, 1, 0, 1, 1,-1/
      DATA (NHEL(I,  86),I=1,6) / 1, 1, 0, 1, 1, 1/
      DATA (NHEL(I,  87),I=1,6) / 1, 1, 0, 1,-1,-1/
      DATA (NHEL(I,  88),I=1,6) / 1, 1, 0, 1,-1, 1/
      DATA (NHEL(I,  89),I=1,6) / 1, 1, 1,-1, 1,-1/
      DATA (NHEL(I,  90),I=1,6) / 1, 1, 1,-1, 1, 1/
      DATA (NHEL(I,  91),I=1,6) / 1, 1, 1,-1,-1,-1/
      DATA (NHEL(I,  92),I=1,6) / 1, 1, 1,-1,-1, 1/
      DATA (NHEL(I,  93),I=1,6) / 1, 1, 1, 1, 1,-1/
      DATA (NHEL(I,  94),I=1,6) / 1, 1, 1, 1, 1, 1/
      DATA (NHEL(I,  95),I=1,6) / 1, 1, 1, 1,-1,-1/
      DATA (NHEL(I,  96),I=1,6) / 1, 1, 1, 1,-1, 1/
      LOGICAL GOODHEL(NCOMB)
      DATA GOODHEL/NCOMB*.FALSE./
      INTEGER NTRY
      DATA NTRY/0/
      DATA IDEN/256/
C     ----------
C     BEGIN CODE
C     ----------
      NTRY=NTRY+1
      ANS = 0D0
      DO IHEL=1,NCOMB
        IF (GOODHEL(IHEL) .OR. NTRY .LT. 2) THEN
          IF (NTRY.LT.2) THEN
C           for the first ps-point, check for helicities that give
C           identical matrix elements
            T=MATRIX_8(P ,NHEL(1,IHEL))
            T_SAVE(IHEL)=T
            T_IDENT(IHEL)=-1
            DO I=1,IHEL-1
              IF (T.EQ.0D0) EXIT
              IF (T_SAVE(I).EQ.0D0) CYCLE
              IF (ABS(T/T_SAVE(I)-1D0) .LT. 1D-12) THEN
C               WRITE (*,*) 'FOUND IDENTICAL',T,IHEL,T_SAVE(I),I
                T_IDENT(IHEL) = I
              ENDIF
            ENDDO
          ELSE
            IF (T_IDENT(IHEL).GT.0) THEN
C             if two helicity states are identical, dont recompute
              T=T_SAVE(T_IDENT(IHEL))
              T_SAVE(IHEL)=T
            ELSE
              T=MATRIX_8(P ,NHEL(1,IHEL))
              T_SAVE(IHEL)=T
            ENDIF
          ENDIF
C         add to the sum of helicities
          ANS=ANS+T
          IF (T .NE. 0D0 .AND. .NOT. GOODHEL(IHEL)) THEN
            GOODHEL(IHEL)=.TRUE.
          ENDIF
        ENDIF
      ENDDO
      ANS=ANS/DBLE(IDEN)
      WGT_ME_REAL=ANS
      END


      REAL*8 FUNCTION MATRIX_8(P,NHEL)
C     
C     Generated by MadGraph5_aMC@NLO v. 2.6.5, 2018-02-03
C     By the MadGraph5_aMC@NLO Development Team
C     Visit launchpad.net/madgraph5 and amcatnlo.web.cern.ch
C     
C     Returns amplitude squared summed/avg over colors
C     for the point with external lines W(0:6,NEXTERNAL)
C     
C     Process: g g > w+ a t~ b WEIGHTED<=6 [ all = QCD ]
C     
      IMPLICIT NONE
C     
C     CONSTANTS
C     
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=38)
      INTEGER    NWAVEFUNCS, NCOLOR
      PARAMETER (NWAVEFUNCS=17, NCOLOR=2)
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
      COMPLEX*16 IMAG1
      PARAMETER (IMAG1=(0D0,1D0))
      INCLUDE 'nexternal.inc'
      INCLUDE 'coupl.inc'
C     
C     ARGUMENTS 
C     
      REAL*8 P(0:3,NEXTERNAL)
      INTEGER NHEL(NEXTERNAL)
C     
C     LOCAL VARIABLES 
C     
      INTEGER I,J
      INTEGER IC(NEXTERNAL)
      DATA IC /NEXTERNAL*1/
      REAL*8 DENOM(NCOLOR), CF(NCOLOR,NCOLOR)
      COMPLEX*16 ZTEMP, AMP(NGRAPHS), JAMP(NCOLOR), W(8,NWAVEFUNCS)
      integer dr_ind(14)
C     
C     COLOR DATA
C     
      DATA DENOM(1)/3/
      DATA (CF(I,  1),I=  1,  2) /   16,   -2/
C     1 T(1,2,6,5)
      DATA DENOM(2)/3/
      DATA (CF(I,  2),I=  1,  2) /   -2,   16/

      dr_ind = (/1,5,6,8,12,13,14,15,25,26,27,28,37,38/)

C     1 T(2,1,6,5)
C     ----------
C     BEGIN CODE
C     ----------
      CALL VXXXXX(P(0,1),ZERO,NHEL(1),-1*IC(1),W(1,1))
      CALL VXXXXX(P(0,2),ZERO,NHEL(2),-1*IC(2),W(1,2))
      CALL VXXXXX(P(0,3),MDL_MW,NHEL(3),+1*IC(3),W(1,3))
      CALL VXXXXX(P(0,4),ZERO,NHEL(4),+1*IC(4),W(1,4))
      CALL IXXXXX(P(0,5),MDL_MT,NHEL(5),-1*IC(5),W(1,5))
      CALL OXXXXX(P(0,6),ZERO,NHEL(6),+1*IC(6),W(1,6))
      CALL VVV1P0_1(W(1,1),W(1,2),GC_4,ZERO,ZERO,W(1,7))
      CALL VVV1_2(W(1,4),W(1,3),GC_25,MDL_MW,MDL_WW,W(1,8))
      CALL FFV1_2(W(1,5),W(1,7),GC_5,MDL_MT,MDL_WT,W(1,9))
C     Amplitude(s) for diagram number 1
      CALL FFV2_0(W(1,9),W(1,6),W(1,8),GC_47,AMP(1))
      CALL FFV1_1(W(1,6),W(1,7),GC_5,ZERO,ZERO,W(1,10))
C     Amplitude(s) for diagram number 2
      CALL FFV2_0(W(1,5),W(1,10),W(1,8),GC_47,AMP(2))
      CALL FFV2_2(W(1,5),W(1,3),GC_47,ZERO,ZERO,W(1,11))
C     Amplitude(s) for diagram number 3
      CALL FFV1_0(W(1,11),W(1,10),W(1,4),GC_1,AMP(3))
      CALL FFV1_1(W(1,6),W(1,4),GC_1,ZERO,ZERO,W(1,12))
C     Amplitude(s) for diagram number 4
      CALL FFV1_0(W(1,11),W(1,12),W(1,7),GC_5,AMP(4))
      CALL FFV2_1(W(1,6),W(1,3),GC_47,MDL_MT,MDL_WT,W(1,13))
C     Amplitude(s) for diagram number 5
      CALL FFV1_0(W(1,9),W(1,13),W(1,4),GC_2,AMP(5))
      CALL FFV1_2(W(1,5),W(1,4),GC_2,MDL_MT,MDL_WT,W(1,14))
C     Amplitude(s) for diagram number 6
      CALL FFV1_0(W(1,14),W(1,13),W(1,7),GC_5,AMP(6))
C     Amplitude(s) for diagram number 7
      CALL FFV2_0(W(1,14),W(1,10),W(1,3),GC_47,AMP(7))
C     Amplitude(s) for diagram number 8
      CALL FFV2_0(W(1,9),W(1,12),W(1,3),GC_47,AMP(8))
      CALL FFV1_2(W(1,5),W(1,1),GC_5,MDL_MT,MDL_WT,W(1,9))
      CALL FFV1_1(W(1,6),W(1,2),GC_5,ZERO,ZERO,W(1,10))
      CALL FFV2_2(W(1,9),W(1,3),GC_47,ZERO,ZERO,W(1,7))
C     Amplitude(s) for diagram number 9
      CALL FFV1_0(W(1,7),W(1,10),W(1,4),GC_1,AMP(9))
      CALL FFV1_2(W(1,9),W(1,4),GC_2,MDL_MT,MDL_WT,W(1,15))
C     Amplitude(s) for diagram number 10
      CALL FFV2_0(W(1,15),W(1,10),W(1,3),GC_47,AMP(10))
C     Amplitude(s) for diagram number 11
      CALL FFV2_0(W(1,9),W(1,10),W(1,8),GC_47,AMP(11))
      CALL FFV1_2(W(1,9),W(1,2),GC_5,MDL_MT,MDL_WT,W(1,16))
C     Amplitude(s) for diagram number 12
      CALL FFV2_0(W(1,16),W(1,6),W(1,8),GC_47,AMP(12))
C     Amplitude(s) for diagram number 13
      CALL FFV1_0(W(1,16),W(1,13),W(1,4),GC_2,AMP(13))
C     Amplitude(s) for diagram number 14
      CALL FFV1_0(W(1,15),W(1,13),W(1,2),GC_5,AMP(14))
C     Amplitude(s) for diagram number 15
      CALL FFV2_0(W(1,16),W(1,12),W(1,3),GC_47,AMP(15))
C     Amplitude(s) for diagram number 16
      CALL FFV1_0(W(1,7),W(1,12),W(1,2),GC_5,AMP(16))
      CALL FFV1_1(W(1,6),W(1,1),GC_5,ZERO,ZERO,W(1,7))
      CALL FFV1_2(W(1,5),W(1,2),GC_5,MDL_MT,MDL_WT,W(1,16))
      CALL FFV2_1(W(1,7),W(1,3),GC_47,MDL_MT,MDL_WT,W(1,15))
C     Amplitude(s) for diagram number 17
      CALL FFV1_0(W(1,16),W(1,15),W(1,4),GC_2,AMP(17))
      CALL FFV1_1(W(1,7),W(1,4),GC_1,ZERO,ZERO,W(1,9))
C     Amplitude(s) for diagram number 18
      CALL FFV2_0(W(1,16),W(1,9),W(1,3),GC_47,AMP(18))
C     Amplitude(s) for diagram number 19
      CALL FFV2_0(W(1,16),W(1,7),W(1,8),GC_47,AMP(19))
      CALL FFV1_1(W(1,7),W(1,2),GC_5,ZERO,ZERO,W(1,17))
C     Amplitude(s) for diagram number 20
      CALL FFV2_0(W(1,5),W(1,17),W(1,8),GC_47,AMP(20))
C     Amplitude(s) for diagram number 21
      CALL FFV1_0(W(1,11),W(1,17),W(1,4),GC_1,AMP(21))
C     Amplitude(s) for diagram number 22
      CALL FFV1_0(W(1,11),W(1,9),W(1,2),GC_5,AMP(22))
C     Amplitude(s) for diagram number 23
      CALL FFV2_0(W(1,14),W(1,17),W(1,3),GC_47,AMP(23))
C     Amplitude(s) for diagram number 24
      CALL FFV1_0(W(1,14),W(1,15),W(1,2),GC_5,AMP(24))
      CALL FFV1_2(W(1,16),W(1,1),GC_5,MDL_MT,MDL_WT,W(1,15))
C     Amplitude(s) for diagram number 25
      CALL FFV2_0(W(1,15),W(1,6),W(1,8),GC_47,AMP(25))
C     Amplitude(s) for diagram number 26
      CALL FFV1_0(W(1,15),W(1,13),W(1,4),GC_2,AMP(26))
      CALL FFV1_1(W(1,13),W(1,1),GC_5,MDL_MT,MDL_WT,W(1,6))
C     Amplitude(s) for diagram number 27
      CALL FFV1_0(W(1,16),W(1,6),W(1,4),GC_2,AMP(27))
C     Amplitude(s) for diagram number 28
      CALL FFV2_0(W(1,15),W(1,12),W(1,3),GC_47,AMP(28))
      CALL FFV1_1(W(1,12),W(1,1),GC_5,ZERO,ZERO,W(1,15))
C     Amplitude(s) for diagram number 29
      CALL FFV2_0(W(1,16),W(1,15),W(1,3),GC_47,AMP(29))
      CALL FFV1_1(W(1,10),W(1,1),GC_5,ZERO,ZERO,W(1,16))
C     Amplitude(s) for diagram number 30
      CALL FFV2_0(W(1,5),W(1,16),W(1,8),GC_47,AMP(30))
C     Amplitude(s) for diagram number 31
      CALL FFV1_0(W(1,11),W(1,16),W(1,4),GC_1,AMP(31))
      CALL FFV1_2(W(1,11),W(1,1),GC_5,ZERO,ZERO,W(1,8))
C     Amplitude(s) for diagram number 32
      CALL FFV1_0(W(1,8),W(1,10),W(1,4),GC_1,AMP(32))
C     Amplitude(s) for diagram number 33
      CALL FFV2_0(W(1,14),W(1,16),W(1,3),GC_47,AMP(33))
      CALL FFV1_2(W(1,14),W(1,1),GC_5,MDL_MT,MDL_WT,W(1,16))
C     Amplitude(s) for diagram number 34
      CALL FFV2_0(W(1,16),W(1,10),W(1,3),GC_47,AMP(34))
C     Amplitude(s) for diagram number 35
      CALL FFV1_0(W(1,8),W(1,12),W(1,2),GC_5,AMP(35))
C     Amplitude(s) for diagram number 36
      CALL FFV1_0(W(1,11),W(1,15),W(1,2),GC_5,AMP(36))
C     Amplitude(s) for diagram number 37
      CALL FFV1_0(W(1,14),W(1,6),W(1,2),GC_5,AMP(37))
C     Amplitude(s) for diagram number 38
      CALL FFV1_0(W(1,16),W(1,13),W(1,2),GC_5,AMP(38))

      do i=1,14
            amp(dr_ind(i)) = dcmplx(0d0,0d0)
      enddo

      JAMP(1)=-IMAG1*AMP(1)-IMAG1*AMP(2)-IMAG1*AMP(3)-IMAG1*AMP(4)
     $ -IMAG1*AMP(5)-IMAG1*AMP(6)-IMAG1*AMP(7)-IMAG1*AMP(8)+AMP(17)
     $ +AMP(18)+AMP(19)+AMP(20)+AMP(21)+AMP(22)+AMP(23)+AMP(24)+AMP(25)
     $ +AMP(26)+AMP(27)+AMP(28)+AMP(29)+AMP(36)+AMP(37)
      JAMP(2)=+IMAG1*AMP(1)+IMAG1*AMP(2)+IMAG1*AMP(3)+IMAG1*AMP(4)
     $ +IMAG1*AMP(5)+IMAG1*AMP(6)+IMAG1*AMP(7)+IMAG1*AMP(8)+AMP(9)
     $ +AMP(10)+AMP(11)+AMP(12)+AMP(13)+AMP(14)+AMP(15)+AMP(16)+AMP(30)
     $ +AMP(31)+AMP(32)+AMP(33)+AMP(34)+AMP(35)+AMP(38)
      MATRIX_8 = 0.D0
      DO I = 1, NCOLOR
        ZTEMP = (0.D0,0.D0)
        DO J = 1, NCOLOR
          ZTEMP = ZTEMP + CF(J,I)*JAMP(J)
        ENDDO
        MATRIX_8 = MATRIX_8+ZTEMP*DCONJG(JAMP(I))/DENOM(I)
      ENDDO
      END

