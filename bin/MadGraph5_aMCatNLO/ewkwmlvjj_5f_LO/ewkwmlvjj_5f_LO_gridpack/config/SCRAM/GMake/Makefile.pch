# Pre-Compile Header generation
define generate_PreCompileHeader
  $(call run_compile_command,$2,precompile header,,$(call GetCXX,$1,gcc) $(COMPILE_OPTIONS) $(call AdjustFlags,$1,PRECOMPILE,CPPFLAGS CXXFLAGS,gcc) $(CXXOPTIMISEDFLAGS) $(CXXSHAREDOBJECTFLAGS),$(CXX_MMD) $(CXX_MF) $(basename $@).d,$(CXX_MM))
  @$(CMD_echo) $(call AdjustFlags,$1,PRECOMPILE,CPPFLAGS CXXFLAGS,gcc) $(CXXOPTIMISEDFLAGS) $(CXXSHAREDOBJECTFLAGS) > $@.$(PRECOMPILE_FLAGS_EXTENSION)
endef

#safename,path,file,pack
define PreCompileHeader
$(if $(strip $(wildcard $($(1)_objdir)/$(3).d)),$(eval -include $($(1)_objdir)/$(3).d))
all_$(1) += $(SCRAMSTORENAME_INCLUDE)/$(SCRAM_ARCH)/$(4)/$(3).$(PRECOMPILE_EXTENSION) $(SCRAMSTORENAME_INCLUDE)/$(SCRAM_ARCH)/$(4)/$(3).$(PRECOMPILE_FLAGS_EXTENSION)
$(SCRAMSTORENAME_INCLUDE)/$(SCRAM_ARCH)/$(4)/$(3).$(PRECOMPILE_EXTENSION): $($(1)_objdir)/$(3).$(PRECOMPILE_EXTENSION)
	@if [ -f $$< ] ; then \
	  [ -d $$(@D) ] ||  $(CMD_mkdir) -p $$(@D) &&\
	  $(CMD_cp) $$< $$@ &&\
	  $(CMD_echo) "01:$(CMD_rm) -f $$@" > $$(call AutoCleanFile,$$<,prod) ;\
	else \
	  $(CMD_rm) -f $$@;\
	fi
$(SCRAMSTORENAME_INCLUDE)/$(SCRAM_ARCH)/$(4)/$(3).$(PRECOMPILE_FLAGS_EXTENSION): $($(1)_objdir)/$(3).$(PRECOMPILE_EXTENSION)
	@if [ -f $$<.$(PRECOMPILE_FLAGS_EXTENSION) ] ; then \
	  [ -d $$(@D) ] ||  $(CMD_mkdir) -p $$(@D) &&\
	  $(CMD_cp) $$<.$(PRECOMPILE_FLAGS_EXTENSION) $$@ &&\
	  $(CMD_echo) "01:$(CMD_rm) -f $$@" > $$(call AutoCleanFile,$$<.$(PRECOMPILE_FLAGS_EXTENSION),prod) ;\
	else \
	  $(CMD_rm) -f $$@;\
	fi
$($(1)_objdir)/$(3).$(PRECOMPILE_EXTENSION): $(2)/$(3) $($(1)_objdir)/precompile
	$$(call generate_PreCompileHeader,$(1),$(1))
endef

