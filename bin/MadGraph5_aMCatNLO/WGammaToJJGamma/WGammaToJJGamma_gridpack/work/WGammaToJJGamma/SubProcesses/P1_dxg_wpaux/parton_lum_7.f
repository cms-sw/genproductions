      SUBROUTINE DLUM_7(LUM)
C     ****************************************************            
C         
C     Generated by MadGraph5_aMC@NLO v. 2.9.18, 2023-12-08
C     By the MadGraph5_aMC@NLO Development Team
C     Visit launchpad.net/madgraph5 and amcatnlo.web.cern.ch
C     RETURNS PARTON LUMINOSITIES FOR MADFKS                          
C        
C     
C     Process: d~ s~ > w+ a u~ s~ WEIGHTED<=6 [ all = QCD ] @1
C     Process: d~ b~ > w+ a u~ b~ WEIGHTED<=6 [ all = QCD ] @1
C     Process: s~ d~ > w+ a c~ d~ WEIGHTED<=6 [ all = QCD ] @1
C     Process: s~ b~ > w+ a c~ b~ WEIGHTED<=6 [ all = QCD ] @1
C     
C     ****************************************************            
C         
      IMPLICIT NONE
C     
C     CONSTANTS                                                       
C         
C     
      INCLUDE 'genps.inc'
      INCLUDE 'nexternal.inc'
      DOUBLE PRECISION       CONV
      PARAMETER (CONV=389379660D0)  !CONV TO PICOBARNS             
C     
C     ARGUMENTS                                                       
C         
C     
      DOUBLE PRECISION PP(0:3,NEXTERNAL), LUM
C     
C     LOCAL VARIABLES                                                 
C         
C     
      INTEGER I, ICROSS,ITYPE,LP
      DOUBLE PRECISION P1(0:3,NEXTERNAL)
      DOUBLE PRECISION SX1,DX1
      DOUBLE PRECISION BX2,SX2,DX2
      DOUBLE PRECISION XPQ(-7:7)
C     
C     EXTERNAL FUNCTIONS                                              
C         
C     
      DOUBLE PRECISION ALPHAS2,REWGT,PDG2PDF
C     
C     GLOBAL VARIABLES                                                
C         
C     
      INTEGER              IPROC
      DOUBLE PRECISION PD(0:MAXPROC)
      COMMON /SUBPROC/ PD, IPROC
      INCLUDE 'coupl.inc'
      INCLUDE 'run.inc'
      INTEGER IMIRROR
      COMMON/CMIRROR/IMIRROR
C     
C     DATA                                                            
C         
C     
      DATA SX1,DX1/2*1D0/
      DATA BX2,SX2,DX2/3*1D0/
      DATA ICROSS/1/
C     ----------                                                      
C         
C     BEGIN CODE                                                      
C         
C     ----------                                                      
C         
      LUM = 0D0
      IF (IMIRROR.EQ.2) THEN
        IF (ABS(LPP(2)) .GE. 1) THEN
          LP=SIGN(1,LPP(2))
          SX1=PDG2PDF(ABS(LPP(2)),-3*LP,XBK(2),DSQRT(Q2FACT(2)))
          DX1=PDG2PDF(ABS(LPP(2)),-1*LP,XBK(2),DSQRT(Q2FACT(2)))
        ENDIF
        IF (ABS(LPP(1)) .GE. 1) THEN
          LP=SIGN(1,LPP(1))
          BX2=PDG2PDF(ABS(LPP(1)),-5*LP,XBK(1),DSQRT(Q2FACT(1)))
          SX2=PDG2PDF(ABS(LPP(1)),-3*LP,XBK(1),DSQRT(Q2FACT(1)))
          DX2=PDG2PDF(ABS(LPP(1)),-1*LP,XBK(1),DSQRT(Q2FACT(1)))
        ENDIF
        PD(0) = 0D0
        IPROC = 0
        IPROC=IPROC+1  ! d~ s~ > w+ a u~ s~
        PD(IPROC) = DX1*SX2
        IPROC=IPROC+1  ! d~ b~ > w+ a u~ b~
        PD(IPROC) = DX1*BX2
        IPROC=IPROC+1  ! s~ d~ > w+ a c~ d~
        PD(IPROC) = SX1*DX2
        IPROC=IPROC+1  ! s~ b~ > w+ a c~ b~
        PD(IPROC) = SX1*BX2
      ELSE
        IF (ABS(LPP(1)) .GE. 1) THEN
          LP=SIGN(1,LPP(1))
          SX1=PDG2PDF(ABS(LPP(1)),-3*LP,XBK(1),DSQRT(Q2FACT(1)))
          DX1=PDG2PDF(ABS(LPP(1)),-1*LP,XBK(1),DSQRT(Q2FACT(1)))
        ENDIF
        IF (ABS(LPP(2)) .GE. 1) THEN
          LP=SIGN(1,LPP(2))
          BX2=PDG2PDF(ABS(LPP(2)),-5*LP,XBK(2),DSQRT(Q2FACT(2)))
          SX2=PDG2PDF(ABS(LPP(2)),-3*LP,XBK(2),DSQRT(Q2FACT(2)))
          DX2=PDG2PDF(ABS(LPP(2)),-1*LP,XBK(2),DSQRT(Q2FACT(2)))
        ENDIF
        PD(0) = 0D0
        IPROC = 0
        IPROC=IPROC+1  ! d~ s~ > w+ a u~ s~
        PD(IPROC) = DX1*SX2
        IPROC=IPROC+1  ! d~ b~ > w+ a u~ b~
        PD(IPROC) = DX1*BX2
        IPROC=IPROC+1  ! s~ d~ > w+ a c~ d~
        PD(IPROC) = SX1*DX2
        IPROC=IPROC+1  ! s~ b~ > w+ a c~ b~
        PD(IPROC) = SX1*BX2
      ENDIF
      DO I=1,IPROC
        IF (NINCOMING.EQ.2) THEN
          LUM = LUM + PD(I) * CONV
        ELSE
          LUM = LUM + PD(I)
        ENDIF
      ENDDO
      RETURN
      END

