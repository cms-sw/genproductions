include ../../../Source/make_opts

LIBDIR = ../../../lib/
LOOPLIB= libMadLoop.a

# For the compilation of the MadLoop file polynomial.f it makes a big difference to use -O3 and
# to turn off the bounds check. These can however be modified here if really necessary.
POLYNOMIAL_OPTIMIZATION = -O3
POLYNOMIAL_BOUNDS_CHECK =

LINKLIBS =  -L$(LIBDIR) -lcts -ldhelas -lmodel -liregi -L/afs/cern.ch/work/s/sverma/genproductions/bin/MadGraph5_aMCatNLO/WWGToLNu2jG_4f_NLO/WWGToLNu2jG_4f_NLO_gridpack/work/MG5_aMC_v2_9_9/HEPTools/lib/ -lninja -L/afs/cern.ch/work/s/sverma/genproductions/bin/MadGraph5_aMCatNLO/WWGToLNu2jG_4f_NLO/WWGToLNu2jG_4f_NLO_gridpack/work/MG5_aMC_v2_9_9/HEPTools/lib/ -lavh_olo -L/afs/cern.ch/work/s/sverma/genproductions/bin/MadGraph5_aMCatNLO/WWGToLNu2jG_4f_NLO/WWGToLNu2jG_4f_NLO_gridpack/work/MG5_aMC_v2_9_9/HEPTools/lib/ -lcollier
LIBS = $(LIBDIR)libcts.$(libext) $(LIBDIR)libdhelas.$(libext)	\
	$(LIBDIR)libmodel.$(libext) $(LIBDIR)libiregi.$(libext) /afs/cern.ch/work/s/sverma/genproductions/bin/MadGraph5_aMCatNLO/WWGToLNu2jG_4f_NLO/WWGToLNu2jG_4f_NLO_gridpack/work/MG5_aMC_v2_9_9/HEPTools/lib/libninja.$(libext) /afs/cern.ch/work/s/sverma/genproductions/bin/MadGraph5_aMCatNLO/WWGToLNu2jG_4f_NLO/WWGToLNu2jG_4f_NLO_gridpack/work/MG5_aMC_v2_9_9/HEPTools/lib/libavh_olo.$(libext) /afs/cern.ch/work/s/sverma/genproductions/bin/MadGraph5_aMCatNLO/WWGToLNu2jG_4f_NLO/WWGToLNu2jG_4f_NLO_gridpack/work/MG5_aMC_v2_9_9/HEPTools/lib/libcollier.$(libext)
PROCESS= $(patsubst %.f,%.o,$(wildcard polynomial.f)) \
         loop_matrix.o improve_ps.o born_matrix.o loop_num.o CT_interface.o	MadLoopCommons.o \
		 $(patsubst %.f,%.o,$(wildcard MadLoopParamReader.f)) \
		 $(patsubst %.f,%.o,$(wildcard helas_calls*.f)) \
		 $(patsubst %.f,%.o,$(wildcard jamp?_calls_*.f)) \
		 $(patsubst %.f,%.o,$(wildcard mp_born_amps_and_wfs.f)) \
		 $(patsubst %.f,%.o,$(wildcard mp_compute_loop_coefs.f)) \
		 $(patsubst %.f,%.o,$(wildcard mp_helas_calls*.f)) \
		 $(patsubst %.f,%.o,$(wildcard coef_construction_*.f)) \
		 $(patsubst %.f,%.o,$(wildcard loop_CT_calls_*.f)) \
		 $(patsubst %.f,%.o,$(wildcard mp_coef_construction_*.f)) \
		 $(patsubst %.f,%.o,$(wildcard TIR_interface.f)) \
		 $(patsubst %.f,%.o,$(wildcard GOLEM_interface.f)) \
		 $(patsubst %.f,%.o,$(wildcard COLLIER_interface.f)) \
		 $(patsubst %.f,%.o,$(wildcard compute_color_flows.f))

# This is the core of madloop computationally wise, so make sure to turn optimizations on and bound checks off.
# We use %olynomial.o and not directly polynomial.o because we want it to match when both doing make check here
# or make OLP one directory above
%olynomial.o : %olynomial.f
	$(FC) $(patsubst -O%,, $(subst -fbounds-check,,$(FFLAGS))) $(POLYNOMIAL_OPTIMIZATION) $(POLYNOMIAL_BOUNDS_CHECK) -c $< -o $@ $(LOOP_INCLUDE)

%.o : %.f
	$(FC) $(FFLAGS) -c $< -I /afs/cern.ch/work/s/sverma/genproductions/bin/MadGraph5_aMCatNLO/WWGToLNu2jG_4f_NLO/WWGToLNu2jG_4f_NLO_gridpack/work/MG5_aMC_v2_9_9/HEPTools/include -I /afs/cern.ch/work/s/sverma/genproductions/bin/MadGraph5_aMCatNLO/WWGToLNu2jG_4f_NLO/WWGToLNu2jG_4f_NLO_gridpack/work/MG5_aMC_v2_9_9/HEPTools/include

all: cleanlib $(LOOPLIB) 

$(LOOPLIB): $(PROCESS)   
	@ar cr $(LOOPLIB) $(PROCESS)
	mv $(LOOPLIB) ../

clean: cleanlib
		@rm -f *.o 

cleanlib:
	rm -f ../$(LOOPLIB) $(PROG)
