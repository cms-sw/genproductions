!Single vector boson production parameters
vdecaymode 13      !(11: electronic decay, 13: muonic decay, 15: tauonic decay) 

numevts NEVENTS          ! number of events to be generated
ih1   1           ! hadron 1 (1 for protons, -1 for antiprotons)
ih2   1           ! hadron 2 (1 for protons, -1 for antiprotons)
ndns1 131         ! pdf set for hadron 1 (mlm numbering)
ndns2 131         ! pdf set for hadron 2 (mlm numbering)
ebeam1 4000d0    ! energy of beam 1
ebeam2 4000d0    ! energy of beam 2
! To be set only if using LHA pdfs
lhans1  21100     ! pdf set for hadron 1 (LHA numbering)
lhans2  21100     ! pdf set for hadron 2 (LHA numbering)
! To be set only if using different pdf sets for the two incoming hadrons
! QCDLambda5  0.25 ! for not equal pdf sets 

! Parameters to allow or not the use of stored data
use-old-grid    1 ! if 1 use old grid if file pwggrids.dat is present (<> 1 regenerate)
use-old-ubound  1 ! if 1 use norm of upper bounding function stored in pwgubound.dat, if present; <> 1 regenerate

# MiNNLO: ncall=200k, it=1, fold=5,2,2 -> 4M calls
# Start with 1M here -> 20min per iteration
ncall1 1000000    ! number of calls for initializing the integration grid
itmx1   1     ! number of iterations for initializing the integration grid
ncall2 1000000     ! number of calls for computing the integral and finding upper bound
itmx2    1     ! number of iterations for computing the integral and finding upper bound
foldcsi   1    ! number of folds on csi integration
foldy     1    ! number of folds on  y  integration
foldphi   1    ! number of folds on phi integration
nubound 1000000       ! number of bbarra calls to setup norm of upper bounding function
icsimax  1     ! <= 100, number of csi subdivision when computing the upper bounds
iymax    1     ! <= 100, number of y subdivision when computing the upper bounds
xupbound 2d0   ! increase upper bound for radiation generation

! OPTIONAL PARAMETERS

#renscfact  1d0   ! (default 1d0) ren scale factor: muren  = muref * renscfact 
#facscfact  1d0   ! (default 1d0) fac scale factor: mufact = muref * facscfact 
#bornonly   1      ! (default 0) if 1 do Born only
#ptsqmin    0.8    ! (default 0.8 GeV) minimum pt for generation of radiation
#charmthr   1.5    ! (default 1.5 GeV) charm treshold for gluon splitting 
#bottomthr  5.0    ! (default 5.0 GeV) bottom treshold for gluon splitting
testplots  1      ! (default 0, do not) do NLO and PWHG distributions
#charmthrpdf  1.5  ! (default 1.5 GeV) pdf charm treshold
#bottomthrpdf 5.0  ! (default 5.0 GeV) pdf bottom treshold

iseed SEED        ! initialize random number sequence
#rand1     -1      ! initialize random number sequence 
#rand2     -1      ! initialize random number sequence 


# Uncomment the following group for paralle runs
#manyseeds  1       ! Used to perform multiple runs with different random
                    ! seeds in the same directory.
                    ! If set to 1, the program asks for an integer j;
                    ! The file pwgseeds.dat at line j is read, and the
                    ! integer at line j is used to initialize the random
                    ! sequence for the generation of the event.
                    ! The event file is called pwgevents-'j'.lhe
#parallelstage 4
#xgriditeration 1
# End group for parallel run


mass_low 50

# Input of the W mass working group report as of Dec. 2014
Zmass 91.1876d0
Zwidth 2.4952d0
Wmass 80.385d0
Wwidth 2.085d0
Hmass 125d0
Mumass 0.1056583715d0
Elmass 0.510998928d-3
Taumass 1.77682d0
scheme 0    !renorm. scheme; 0: alpha(0), 1: alpha(mz^2), 2: G_mu, 3: alpha(q^2)
alphaem 0.0072973525698163d0
Tmass 173.5d0
runningscale 1       ! default is 1, true, central scale equal to W virtuality, 0 equal to M_W
#



#no_strong 1         ! default 0; if 1, nostrong corrections are included
#no_ew 1             ! default 0; if 1, no EW corrections are included

#ew_ho 1              ! if 1, higher order ew corrections beyond NLO are switched on
#weak-only  1         ! if 1, only pure weak NLO corrections are calculated (no virtual/real photons)
#ew_ho_only 1         ! if 
#constant-dda-scale 1 ! scale of higher order corrections fixed to M_Z or calculated at Q^2

#LOevents 1           ! for LO event production


btlscalereal 1
btlscalect 1


# Option for alternative splitting R-> R_s + R_f
# These were study with the W (no EW!) code to see the effect on the unphysical negative value of the a0
# angular correlation coefficients
# bornzerodamp 1    ! Turn this on (without this the program behaves as usual)
# new_damp 1        ! R_s = max(0,min(1, R_app/R)), where R_app is the soft collinear approximation to R, R_app = R_soft + R_coll - R_soft_coll
# hnew_damp 0.5     ! if this flag appears together with new_damp 1, then R_app -> R_app * h^2 * m^2 / ( h^2 * m^2 + pt2 ), where
                    ! h is the value of hnew_damp, m is the mass of the vector boson, and pt2 is the square of its transverse momentum
# hdamp 1.0         ! if this flag appears, R_s -> R_s *  h^2 * m^2 / ( h^2 * m^2 + pt2 ), where h is the value of hdamp.
                    ! The following combination seem to yield a0 consistent with non-negative values:
                    ! new_damp 1 + hdamp 0.25; new_damp 1 + hnew_damp 0.5 ;
                    ! Looking at the Bornzerodamp.f routine should clarify all doubts on these options.
                    ! You can experiment with other values. Remember: too small  hnew_damp and/or hdamp factors can cause troubles,
                    ! check that you get a nice sudakov shape of the vector boson pt.


